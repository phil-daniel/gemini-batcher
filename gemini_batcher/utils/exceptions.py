class GeminiBatcherError(Exception):
    """
    Generic exception for anything occuring during gemini-batcher processes.
    """
    pass

class GeminiAPIError(GeminiBatcherError):
    """
    Generic exception for any errors produced during an API call to the Gemini API.
    """
    pass

class GeminiFinishError(GeminiAPIError):
    """
    Generic exception that is raised if tokens generated by Gemini do not finish at a natural stop point.
    This is determined by the 'FinishReason' response.
    """
    pass

class MaxOutputTokensExceeded(GeminiFinishError):
    """
    Exception that is raised when API call to Gemini stops because the model's maximum output token limit has been exceeded.
    This occurs when 'FinishReason = MAX_TOKENS'
    """
    pass

class MaxInputTokensExceeded(GeminiBatcherError):
    pass

class RateLimitExceeded(GeminiAPIError):
    """
    Exception that is raised when an API call to Gemini returns with the APIError exception (from google.genai) with error code 429.
    This occurs when API calls to the Gemini API have been rate limited.
    """

    message : str = None
    retry_delay : int = None
    
    def __init__(
        self,
        message : str,
        retry_delay : int
    ):
        self.message = message
        self.retry_delay = retry_delay